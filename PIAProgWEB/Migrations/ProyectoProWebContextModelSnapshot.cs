// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PIAProgWEB.Models.dbModels;

#nullable disable

namespace PIAProgWEB.Migrations
{
    [DbContext(typeof(ProyectoProWebContext))]
    partial class ProyectoProWebContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ApplicationUserProducto", b =>
                {
                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdProducto", "IdUsuario");

                    b.HasIndex("IdUsuario");

                    b.ToTable("ApplicationUserProducto");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("RolId");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.Carrito", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.Property<int>("ProductioId")
                        .HasColumnType("int")
                        .HasColumnName("ProductioID");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.HasKey("UsuarioId", "ProductioId");

                    b.HasIndex("ProductioId");

                    b.ToTable("Carrito");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.Categorium", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoriaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaId"), 1L, 1);

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.DetalleOrden", b =>
                {
                    b.Property<int>("OrdenId")
                        .HasColumnType("int")
                        .HasColumnName("OrdenID");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("ProductoID");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("money");

                    b.HasKey("OrdenId", "ProductoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("Detalle_orden");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.DirecciónEnvio", b =>
                {
                    b.Property<int>("DirecciónId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DirecciónID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DirecciónId"), 1L, 1);

                    b.Property<string>("DirecciónCompleta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("DirecciónId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Dirección_envio");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.Estacione", b =>
                {
                    b.Property<int>("IdEstacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstacion"), 1L, 1);

                    b.Property<string>("Estacion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdEstacion");

                    b.ToTable("Estaciones");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.EstadoOrden", b =>
                {
                    b.Property<int>("EstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EstadoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadoId"), 1L, 1);

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("EstadoId");

                    b.ToTable("Estado_orden");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.ImagenNovedad", b =>
                {
                    b.Property<int>("IdImagen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdImagen"), 1L, 1);

                    b.Property<int>("IdNovedad")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdImagen");

                    b.HasIndex("IdNovedad");

                    b.ToTable("Imagen_novedad");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.Novedad", b =>
                {
                    b.Property<int>("IdNovedad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNovedad"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdEstacion")
                        .HasColumnType("int");

                    b.HasKey("IdNovedad");

                    b.HasIndex("IdEstacion");

                    b.ToTable("Novedad");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.Orden", b =>
                {
                    b.Property<int>("OrdenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrdenID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrdenId"), 1L, 1);

                    b.Property<int>("EstadoOrden")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("OrdenId");

                    b.HasIndex("EstadoOrden");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Orden");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoId"), 1L, 1);

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("CategoriaID");

                    b.Property<string>("Descripción")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("money");

                    b.HasKey("ProductoId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.ProductoTalla", b =>
                {
                    b.Property<int>("TallaId")
                        .HasColumnType("int")
                        .HasColumnName("TallaID");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int")
                        .HasColumnName("ProductoID");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.HasKey("TallaId", "ProductoId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ProductoTalla");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.Rol", b =>
                {
                    b.Property<int>("RolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RolID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RolId"), 1L, 1);

                    b.Property<string>("Rol1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Rol");

                    b.HasKey("RolId");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.Subcategorium", b =>
                {
                    b.Property<int>("IdSubcategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSubcategoria"), 1L, 1);

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("CategoriaID");

                    b.Property<string>("NombreSubcategoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdSubcategoria")
                        .HasName("PK_Genero");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Subcategoria");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.Talla", b =>
                {
                    b.Property<int>("TallaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TallaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TallaId"), 1L, 1);

                    b.Property<string>("Tamaño")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TallaId");

                    b.ToTable("Talla");
                });

            modelBuilder.Entity("ApplicationUserProducto", b =>
                {
                    b.HasOne("PIAProgWEB.Models.dbModels.Producto", null)
                        .WithMany()
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIAProgWEB.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("PIAProgWEB.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("PIAProgWEB.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIAProgWEB.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("PIAProgWEB.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.ApplicationUser", b =>
                {
                    b.HasOne("PIAProgWEB.Models.dbModels.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.Carrito", b =>
                {
                    b.HasOne("PIAProgWEB.Models.dbModels.Producto", "Productio")
                        .WithMany("Carritos")
                        .HasForeignKey("ProductioId")
                        .IsRequired()
                        .HasConstraintName("FK_Carrito_Producto");

                    b.HasOne("PIAProgWEB.Models.dbModels.ApplicationUser", "Usuario")
                        .WithMany("Carritos")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK_Carrito_Usuario");

                    b.Navigation("Productio");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.DetalleOrden", b =>
                {
                    b.HasOne("PIAProgWEB.Models.dbModels.Orden", "Orden")
                        .WithMany("DetalleOrdens")
                        .HasForeignKey("OrdenId")
                        .IsRequired()
                        .HasConstraintName("FK_Detalle_orden_Orden");

                    b.HasOne("PIAProgWEB.Models.dbModels.Producto", "Producto")
                        .WithMany("DetalleOrdens")
                        .HasForeignKey("ProductoId")
                        .IsRequired()
                        .HasConstraintName("FK_Detalle_orden_Producto");

                    b.Navigation("Orden");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.DirecciónEnvio", b =>
                {
                    b.HasOne("PIAProgWEB.Models.dbModels.ApplicationUser", "Usuario")
                        .WithMany("DirecciónEnvios")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK_Dirección_envio_Usuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.ImagenNovedad", b =>
                {
                    b.HasOne("PIAProgWEB.Models.dbModels.Novedad", "IdNovedadNavigation")
                        .WithMany("ImagenNovedads")
                        .HasForeignKey("IdNovedad")
                        .IsRequired()
                        .HasConstraintName("FK_Imagen_novedad_Novedad");

                    b.Navigation("IdNovedadNavigation");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.Novedad", b =>
                {
                    b.HasOne("PIAProgWEB.Models.dbModels.Estacione", "IdEstacionNavigation")
                        .WithMany("Novedads")
                        .HasForeignKey("IdEstacion")
                        .IsRequired()
                        .HasConstraintName("FK_Novedad_Estaciones");

                    b.Navigation("IdEstacionNavigation");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.Orden", b =>
                {
                    b.HasOne("PIAProgWEB.Models.dbModels.EstadoOrden", "EstadoOrdenNavigation")
                        .WithMany("Ordens")
                        .HasForeignKey("EstadoOrden")
                        .IsRequired()
                        .HasConstraintName("FK_Orden_Estado_orden");

                    b.HasOne("PIAProgWEB.Models.dbModels.ApplicationUser", "Usuario")
                        .WithMany("Ordens")
                        .HasForeignKey("UsuarioId")
                        .IsRequired()
                        .HasConstraintName("FK_Orden_Usuario");

                    b.Navigation("EstadoOrdenNavigation");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.Producto", b =>
                {
                    b.HasOne("PIAProgWEB.Models.dbModels.Categorium", "Categoria")
                        .WithMany("Productos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.ProductoTalla", b =>
                {
                    b.HasOne("PIAProgWEB.Models.dbModels.Producto", "Producto")
                        .WithMany("ProductoTallas")
                        .HasForeignKey("ProductoId")
                        .IsRequired()
                        .HasConstraintName("FK_ProductoTalla_Producto");

                    b.HasOne("PIAProgWEB.Models.dbModels.Talla", "Talla")
                        .WithMany("ProductoTallas")
                        .HasForeignKey("TallaId")
                        .IsRequired()
                        .HasConstraintName("FK_ProductoTalla_Talla");

                    b.Navigation("Producto");

                    b.Navigation("Talla");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.Subcategorium", b =>
                {
                    b.HasOne("PIAProgWEB.Models.dbModels.Categorium", "Categoria")
                        .WithMany("Subcategoria")
                        .HasForeignKey("CategoriaId")
                        .IsRequired()
                        .HasConstraintName("FK_Subcategoria_Categoria");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.ApplicationUser", b =>
                {
                    b.Navigation("Carritos");

                    b.Navigation("DirecciónEnvios");

                    b.Navigation("Ordens");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.Categorium", b =>
                {
                    b.Navigation("Productos");

                    b.Navigation("Subcategoria");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.Estacione", b =>
                {
                    b.Navigation("Novedads");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.EstadoOrden", b =>
                {
                    b.Navigation("Ordens");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.Novedad", b =>
                {
                    b.Navigation("ImagenNovedads");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.Orden", b =>
                {
                    b.Navigation("DetalleOrdens");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.Producto", b =>
                {
                    b.Navigation("Carritos");

                    b.Navigation("DetalleOrdens");

                    b.Navigation("ProductoTallas");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("PIAProgWEB.Models.dbModels.Talla", b =>
                {
                    b.Navigation("ProductoTallas");
                });
#pragma warning restore 612, 618
        }
    }
}
