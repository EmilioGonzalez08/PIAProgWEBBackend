@model IEnumerable<PIAProgWEB.Models.dbModels.Producto>

@{
    ViewData["Title"] = "Index";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Producto_Index"]</title>

    <!-- Enlazar archivo CSS -->
    <link rel="stylesheet" href="~/css/producto.css" />

    <!-- Añadir Bootstrap -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
</head>

<body>
    <div class="container mt-5">
        <div class="row">
            <!-- Subcategories Section -->
            <div class="col-md-3">
                <h4>Subcategorias</h4>
                <ul id="subcategories">
                    @foreach (var subcategory in Model.Select(p => p.SubCategoria.NombreSubcategoria).Distinct())
                    {
                        <li onclick="filterProducts('@subcategory')">@subcategory</li>
                    }
                </ul>
            </div>

            <!-- Products Table Section -->
            <div class="col-md-9">
                @if (User.IsInRole("Admin"))
                {
                    <div class="action-buttons mb-3">
                        <a asp-action="Create" class="btn btn-primary">Agregar Producto</a>
                    </div>
                }
                <table class="table">
                    <!-- Table headers -->
                    <thead class="thead-light">
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.NombreProducto)</th>
                            <th>@Html.DisplayNameFor(model => model.Descripción)</th>
                            <th>@Html.DisplayNameFor(model => model.Precio)</th>
                            <th>@Html.DisplayNameFor(model => model.Imagen)</th>
                            <th>@Html.DisplayNameFor(model => model.SubCategoria)</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>

                    <!-- Table body -->
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr data-subcategory="@item.SubCategoria.NombreSubcategoria">
                                <td>@Html.DisplayFor(modelItem => item.NombreProducto)</td>
                                <td>@Html.DisplayFor(modelItem => item.Descripción)</td>
                                <td>@Html.DisplayFor(modelItem => item.Precio)</td>
                                <td><img src="@Html.DisplayFor(modelItem => item.Imagen)" /></td>
                                <td>@Html.DisplayFor(modelItem => item.SubCategoria.NombreSubcategoria)</td>
                                <td>
                                    @if (User.IsInRole("Admin"))
                                    {
                                        <div class="action-buttons">
                                            <a asp-action="Edit" asp-route-id="@item.ProductoId" class="btn btn-warning">Edit</a>
                                            <a asp-action="Details" asp-route-id="@item.ProductoId" class="btn btn-info">Details</a>
                                            <a asp-action="Delete" asp-route-id="@item.ProductoId" class="btn btn-danger">Delete</a>
                                        </div>
                                    }
                                    else
                                    {
                                        <div>
                                            <label for="selectedSize">Talla:</label>
                                            <select name="selectedSize" class="size-dropdown">
                                                @foreach (var talla in item.ProductoTallas)
                                                {
                                                    <option value="@talla.Talla.Tamaño" data-available-quantity="@talla.Cantidad">@talla.Talla.Tamaño</option>
                                                }
                                            </select>
                                        </div>

                                        <div>
                                            <label for="selectedQuantity">Cantidad:</label>
                                            <select name="selectedQuantity" class="quantity-dropdown">
                                                @for (int i = 1; i <= item.ProductoTallas.Min(t => t.Cantidad); i++)
                                                {
                                                    <option value="@i">@i</option>
                                                }
                                            </select>
                                        </div>

                                        <button class="add-to-cart-button"
                                        data-product-id="@item.ProductoId"
                                        data-available-quantities="@Html.Raw(Json.Serialize(item.ProductoTallas.ToDictionary(t => t.Talla.Tamaño, t => t.Cantidad)))">
                                            Add to Cart
                                        </button>

                                        <a href="#" class="add-to-favorites-button">Add to Favorites</a>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                @if (User.IsInRole("Admin"))
                {
                    // Button for Admin to redirect to ProductoTallas 
                    <div class="action-buttons">
                        <a asp-action="Create" asp-controller="ProductoTallas" class="btn btn-primary">Asignar Tallas</a>
                    </div>
                }
            </div>
        </div>
    </div>

    @section scripts {
        <!-- Load jQuery before using it -->
        <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

        <!-- Existing script for filtering products -->
        <script>
            function filterProducts(subcategory) {
                // Hide all rows
                $('table tbody tr').hide();

                // Show rows with the selected subcategory
                $('table tbody tr[data-subcategory="' + subcategory + '"]').show();
            }
        </script>

        <!-- Updated script for handling "Add to Cart" button with dynamic availability -->
        <script>
            $(document).ready(function () {
                $('.add-to-cart-button').on('click', function () {
                    var productId = $(this).data('product-id');
                    var currentRow = $(this).closest('tr');
                    var selectedSize = currentRow.find('select[name="selectedSize"]');
                    var selectedQuantity = parseFloat(currentRow.find('select[name="selectedQuantity"]').val());

                    // Obtener la cantidad disponible para la talla seleccionada
                    var availableQuantities = currentRow.find('select[name="selectedSize"] option')
                        .map(function () { return { size: $(this).val(), quantity: $(this).data('available-quantity') }; })
                        .get();

                    // Ajustar el máximo de la cantidad al disponible para la talla seleccionada
                    var selectedSizeValue = selectedSize.val();
                    var selectedSizeAvailability = availableQuantities.find(q => q.size === selectedSizeValue);
                    selectedSize.attr('max', selectedSizeAvailability.quantity);

                    console.log('Selected Quantity:', selectedQuantity);
                    console.log('Available Quantity for selected size:', selectedSizeAvailability.quantity);

                    if (!isNaN(selectedQuantity)) {
                        if (selectedQuantity <= selectedSizeAvailability.quantity) {
                            $.ajax({
                                url: '/Carrito/AddToCart',
                                method: 'POST',
                                data: {
                                    productId: productId,
                                    selectedSize: selectedSizeValue,
                                    selectedQuantity: selectedQuantity
                                },
                                success: function (result) {
                                    console.log(result);
                                    if (result.success) {
                                        alert('Product added to cart successfully!');
                                    } else {
                                        alert('Error adding product to cart. Please try again.');
                                    }
                                },
                                error: function () {
                                    alert('Error: Unable to add product to cart');
                                }
                            });
                        } else {
                            alert('Selected quantity exceeds available quantity. Please try again.');
                        }
                    } else {
                        alert('Invalid quantity. Please try again.');
                    }
                });

                // Agregar un manejador de eventos para cambiar el máximo de la cantidad al cambiar la talla
                $('select[name="selectedSize"]').on('change', function () {
                    var selectedSizeValue = $(this).val();
                    var selectedSizeAvailability = availableQuantities.find(q => q.size === selectedSizeValue);
                    $(this).siblings('div').find('select[name="selectedQuantity"]').attr('max', selectedSizeAvailability.quantity);
                });
            });
        </script>
    }
</body>
</html>